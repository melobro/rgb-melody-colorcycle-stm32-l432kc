ARM GAS  /tmp/ccnweiy3.s 			page 1


   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.MX_GPIO_Init,"ax",%progbits
  18              		.align	1
  19              		.arch armv7e-m
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  23              		.fpu fpv4-sp-d16
  25              	MX_GPIO_Init:
  26              	.LFB138:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccnweiy3.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** TIM_HandleTypeDef htim1;
  43:Core/Src/main.c **** TIM_HandleTypeDef htim2;
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** UART_HandleTypeDef huart2;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_USART2_UART_Init(void);
  55:Core/Src/main.c **** static void MX_TIM1_Init(void);
  56:Core/Src/main.c **** static void MX_TIM2_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** void setcolor (uint8_t r, uint8_t g, uint8_t b)
  65:Core/Src/main.c **** {
  66:Core/Src/main.c ****  htim1.Instance->CCR1 = r;
  67:Core/Src/main.c ****  htim1.Instance->CCR2 = g;
  68:Core/Src/main.c ****  htim1.Instance->CCR3 = b;
  69:Core/Src/main.c **** }
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c ****  
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccnweiy3.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 100:Core/Src/main.c ****   MX_USART2_UART_Init();
 101:Core/Src/main.c ****   MX_TIM1_Init();
 102:Core/Src/main.c ****   MX_TIM2_Init();
 103:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 104:Core/Src/main.c ****   
 105:Core/Src/main.c ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_1);
 106:Core/Src/main.c ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_2);
 107:Core/Src/main.c ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_3);
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c ****    setcolor(255,0,0);  //Red
 116:Core/Src/main.c ****    HAL_Delay(1200);
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****    setcolor(0,255,0);   //Green
 119:Core/Src/main.c ****    HAL_Delay(1200);
 120:Core/Src/main.c **** 
 121:Core/Src/main.c ****    setcolor(0,0,255);  //Blue
 122:Core/Src/main.c ****    HAL_Delay(1200);
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****    setcolor(255,0,255);  //Pink
 125:Core/Src/main.c ****    HAL_Delay(1200);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****    setcolor(255,255,0);  //Yellow
 128:Core/Src/main.c ****    HAL_Delay(1200);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****    setcolor(0,255,255);  //Turquiose
 131:Core/Src/main.c ****    HAL_Delay(1200);
 132:Core/Src/main.c ****    
 133:Core/Src/main.c ****    setcolor(255,0,127);   //Magenta
 134:Core/Src/main.c ****    HAL_Delay(1200);
 135:Core/Src/main.c ****    
 136:Core/Src/main.c ****    setcolor(127,0,255);  //Violet
 137:Core/Src/main.c ****    HAL_Delay(1200);
 138:Core/Src/main.c ****    
 139:Core/Src/main.c ****    setcolor(255,127,0);  //Orange
 140:Core/Src/main.c ****    HAL_Delay(1200);
 141:Core/Src/main.c ****    
 142:Core/Src/main.c ****    setcolor(230,230,250);  //Lavender
 143:Core/Src/main.c ****    HAL_Delay(1200);
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
ARM GAS  /tmp/ccnweiy3.s 			page 4


 146:Core/Src/main.c ****   }
 147:Core/Src/main.c ****   /* USER CODE END 3 */
 148:Core/Src/main.c **** }
 149:Core/Src/main.c **** 
 150:Core/Src/main.c **** /**
 151:Core/Src/main.c ****   * @brief System Clock Configuration
 152:Core/Src/main.c ****   * @retval None
 153:Core/Src/main.c ****   */
 154:Core/Src/main.c **** void SystemClock_Config(void)
 155:Core/Src/main.c **** {
 156:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 157:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c ****   if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1) != HAL_OK)
 162:Core/Src/main.c ****   {
 163:Core/Src/main.c ****     Error_Handler();
 164:Core/Src/main.c ****   }
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Configure LSE Drive Capability
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   HAL_PWR_EnableBkUpAccess();
 169:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 175:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 176:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 177:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 178:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 185:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 186:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****     Error_Handler();
 189:Core/Src/main.c ****   }
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 194:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 195:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 196:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 198:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 199:Core/Src/main.c **** 
 200:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 201:Core/Src/main.c ****   {
 202:Core/Src/main.c ****     Error_Handler();
ARM GAS  /tmp/ccnweiy3.s 			page 5


 203:Core/Src/main.c ****   }
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /** Enable MSI Auto calibration
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c ****   HAL_RCCEx_EnableMSIPLLMode();
 208:Core/Src/main.c **** }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c **** /**
 211:Core/Src/main.c ****   * @brief TIM1 Initialization Function
 212:Core/Src/main.c ****   * @param None
 213:Core/Src/main.c ****   * @retval None
 214:Core/Src/main.c ****   */
 215:Core/Src/main.c **** static void MX_TIM1_Init(void)
 216:Core/Src/main.c **** {
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 0 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /* USER CODE END TIM1_Init 0 */
 221:Core/Src/main.c **** 
 222:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 223:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 224:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 1 */
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* USER CODE END TIM1_Init 1 */
 229:Core/Src/main.c ****   htim1.Instance = TIM1;
 230:Core/Src/main.c ****   htim1.Init.Prescaler = 1384-1;
 231:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 232:Core/Src/main.c ****   htim1.Init.Period = 255-1;
 233:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 234:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 235:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 236:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 237:Core/Src/main.c ****   {
 238:Core/Src/main.c ****     Error_Handler();
 239:Core/Src/main.c ****   }
 240:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 241:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 242:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 243:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 248:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 249:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 250:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 251:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 252:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 253:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 254:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 255:Core/Src/main.c ****   {
 256:Core/Src/main.c ****     Error_Handler();
 257:Core/Src/main.c ****   }
 258:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 259:Core/Src/main.c ****   {
ARM GAS  /tmp/ccnweiy3.s 			page 6


 260:Core/Src/main.c ****     Error_Handler();
 261:Core/Src/main.c ****   }
 262:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 263:Core/Src/main.c ****   {
 264:Core/Src/main.c ****     Error_Handler();
 265:Core/Src/main.c ****   }
 266:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateRunMode = TIM_OSSR_DISABLE;
 267:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 268:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 269:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 270:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 271:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 272:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 273:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 274:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 275:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 276:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 277:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     Error_Handler();
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c ****   /* USER CODE BEGIN TIM1_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END TIM1_Init 2 */
 284:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim1);
 285:Core/Src/main.c **** 
 286:Core/Src/main.c **** }
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** /**
 289:Core/Src/main.c ****   * @brief TIM2 Initialization Function
 290:Core/Src/main.c ****   * @param None
 291:Core/Src/main.c ****   * @retval None
 292:Core/Src/main.c ****   */
 293:Core/Src/main.c **** static void MX_TIM2_Init(void)
 294:Core/Src/main.c **** {
 295:Core/Src/main.c **** 
 296:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 0 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END TIM2_Init 0 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 301:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 302:Core/Src/main.c **** 
 303:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 1 */
 304:Core/Src/main.c **** 
 305:Core/Src/main.c ****   /* USER CODE END TIM2_Init 1 */
 306:Core/Src/main.c ****   htim2.Instance = TIM2;
 307:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 308:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 309:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 310:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 311:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 312:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 313:Core/Src/main.c ****   {
 314:Core/Src/main.c ****     Error_Handler();
 315:Core/Src/main.c ****   }
 316:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
ARM GAS  /tmp/ccnweiy3.s 			page 7


 317:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 318:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 319:Core/Src/main.c ****   {
 320:Core/Src/main.c ****     Error_Handler();
 321:Core/Src/main.c ****   }
 322:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 323:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 324:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 325:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 326:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 327:Core/Src/main.c ****   {
 328:Core/Src/main.c ****     Error_Handler();
 329:Core/Src/main.c ****   }
 330:Core/Src/main.c ****   /* USER CODE BEGIN TIM2_Init 2 */
 331:Core/Src/main.c **** 
 332:Core/Src/main.c ****   /* USER CODE END TIM2_Init 2 */
 333:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim2);
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief USART2 Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_USART2_UART_Init(void)
 343:Core/Src/main.c **** {
 344:Core/Src/main.c **** 
 345:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 0 */
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /* USER CODE END USART2_Init 0 */
 348:Core/Src/main.c **** 
 349:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 1 */
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /* USER CODE END USART2_Init 1 */
 352:Core/Src/main.c ****   huart2.Instance = USART2;
 353:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 354:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 355:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 356:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 357:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 358:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 359:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 360:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 361:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 362:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 363:Core/Src/main.c ****   {
 364:Core/Src/main.c ****     Error_Handler();
 365:Core/Src/main.c ****   }
 366:Core/Src/main.c ****   /* USER CODE BEGIN USART2_Init 2 */
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /* USER CODE END USART2_Init 2 */
 369:Core/Src/main.c **** 
 370:Core/Src/main.c **** }
 371:Core/Src/main.c **** 
 372:Core/Src/main.c **** /**
 373:Core/Src/main.c ****   * @brief GPIO Initialization Function
ARM GAS  /tmp/ccnweiy3.s 			page 8


 374:Core/Src/main.c ****   * @param None
 375:Core/Src/main.c ****   * @retval None
 376:Core/Src/main.c ****   */
 377:Core/Src/main.c **** static void MX_GPIO_Init(void)
 378:Core/Src/main.c **** {
  28              		.loc 1 378 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 379:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 379 3 view .LVU1
  42              		.loc 1 379 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 380:Core/Src/main.c **** 
 381:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 382:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  49              		.loc 1 382 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 382 3 view .LVU4
  52              		.loc 1 382 3 view .LVU5
  53 0010 164B     		ldr	r3, .L3
  54 0012 DA6C     		ldr	r2, [r3, #76]
  55 0014 42F00402 		orr	r2, r2, #4
  56 0018 DA64     		str	r2, [r3, #76]
  57              		.loc 1 382 3 view .LVU6
  58 001a DA6C     		ldr	r2, [r3, #76]
  59 001c 02F00402 		and	r2, r2, #4
  60 0020 0092     		str	r2, [sp]
  61              		.loc 1 382 3 view .LVU7
  62 0022 009A     		ldr	r2, [sp]
  63              	.LBE4:
  64              		.loc 1 382 3 view .LVU8
 383:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 383 3 view .LVU9
  66              	.LBB5:
  67              		.loc 1 383 3 view .LVU10
  68              		.loc 1 383 3 view .LVU11
  69 0024 DA6C     		ldr	r2, [r3, #76]
  70 0026 42F00102 		orr	r2, r2, #1
  71 002a DA64     		str	r2, [r3, #76]
  72              		.loc 1 383 3 view .LVU12
  73 002c DA6C     		ldr	r2, [r3, #76]
  74 002e 02F00102 		and	r2, r2, #1
ARM GAS  /tmp/ccnweiy3.s 			page 9


  75 0032 0192     		str	r2, [sp, #4]
  76              		.loc 1 383 3 view .LVU13
  77 0034 019A     		ldr	r2, [sp, #4]
  78              	.LBE5:
  79              		.loc 1 383 3 view .LVU14
 384:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 384 3 view .LVU15
  81              	.LBB6:
  82              		.loc 1 384 3 view .LVU16
  83              		.loc 1 384 3 view .LVU17
  84 0036 DA6C     		ldr	r2, [r3, #76]
  85 0038 42F00202 		orr	r2, r2, #2
  86 003c DA64     		str	r2, [r3, #76]
  87              		.loc 1 384 3 view .LVU18
  88 003e DB6C     		ldr	r3, [r3, #76]
  89 0040 03F00203 		and	r3, r3, #2
  90 0044 0293     		str	r3, [sp, #8]
  91              		.loc 1 384 3 view .LVU19
  92 0046 029B     		ldr	r3, [sp, #8]
  93              	.LBE6:
  94              		.loc 1 384 3 view .LVU20
 385:Core/Src/main.c **** 
 386:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 387:Core/Src/main.c ****   HAL_GPIO_WritePin(LD3_GPIO_Port, LD3_Pin, GPIO_PIN_RESET);
  95              		.loc 1 387 3 view .LVU21
  96 0048 094D     		ldr	r5, .L3+4
  97 004a 2246     		mov	r2, r4
  98 004c 0821     		movs	r1, #8
  99 004e 2846     		mov	r0, r5
 100 0050 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 388:Core/Src/main.c **** 
 389:Core/Src/main.c ****   /*Configure GPIO pin : LD3_Pin */
 390:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD3_Pin;
 102              		.loc 1 390 3 view .LVU22
 103              		.loc 1 390 23 is_stmt 0 view .LVU23
 104 0054 0823     		movs	r3, #8
 105 0056 0393     		str	r3, [sp, #12]
 391:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 106              		.loc 1 391 3 is_stmt 1 view .LVU24
 107              		.loc 1 391 24 is_stmt 0 view .LVU25
 108 0058 0123     		movs	r3, #1
 109 005a 0493     		str	r3, [sp, #16]
 392:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 110              		.loc 1 392 3 is_stmt 1 view .LVU26
 111              		.loc 1 392 24 is_stmt 0 view .LVU27
 112 005c 0594     		str	r4, [sp, #20]
 393:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 113              		.loc 1 393 3 is_stmt 1 view .LVU28
 114              		.loc 1 393 25 is_stmt 0 view .LVU29
 115 005e 0694     		str	r4, [sp, #24]
 394:Core/Src/main.c ****   HAL_GPIO_Init(LD3_GPIO_Port, &GPIO_InitStruct);
 116              		.loc 1 394 3 is_stmt 1 view .LVU30
 117 0060 03A9     		add	r1, sp, #12
 118 0062 2846     		mov	r0, r5
 119 0064 FFF7FEFF 		bl	HAL_GPIO_Init
 120              	.LVL1:
ARM GAS  /tmp/ccnweiy3.s 			page 10


 395:Core/Src/main.c **** 
 396:Core/Src/main.c **** }
 121              		.loc 1 396 1 is_stmt 0 view .LVU31
 122 0068 09B0     		add	sp, sp, #36
 123              	.LCFI2:
 124              		.cfi_def_cfa_offset 12
 125              		@ sp needed
 126 006a 30BD     		pop	{r4, r5, pc}
 127              	.L4:
 128              		.align	2
 129              	.L3:
 130 006c 00100240 		.word	1073876992
 131 0070 00040048 		.word	1207960576
 132              		.cfi_endproc
 133              	.LFE138:
 135              		.section	.text.setcolor,"ax",%progbits
 136              		.align	1
 137              		.global	setcolor
 138              		.syntax unified
 139              		.thumb
 140              		.thumb_func
 141              		.fpu fpv4-sp-d16
 143              	setcolor:
 144              	.LVL2:
 145              	.LFB132:
  65:Core/Src/main.c ****  htim1.Instance->CCR1 = r;
 146              		.loc 1 65 1 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
  66:Core/Src/main.c ****  htim1.Instance->CCR2 = g;
 151              		.loc 1 66 2 view .LVU33
  66:Core/Src/main.c ****  htim1.Instance->CCR2 = g;
 152              		.loc 1 66 7 is_stmt 0 view .LVU34
 153 0000 024B     		ldr	r3, .L6
 154 0002 1B68     		ldr	r3, [r3]
  66:Core/Src/main.c ****  htim1.Instance->CCR2 = g;
 155              		.loc 1 66 23 view .LVU35
 156 0004 5863     		str	r0, [r3, #52]
  67:Core/Src/main.c ****  htim1.Instance->CCR3 = b;
 157              		.loc 1 67 2 is_stmt 1 view .LVU36
  67:Core/Src/main.c ****  htim1.Instance->CCR3 = b;
 158              		.loc 1 67 23 is_stmt 0 view .LVU37
 159 0006 9963     		str	r1, [r3, #56]
  68:Core/Src/main.c **** }
 160              		.loc 1 68 2 is_stmt 1 view .LVU38
  68:Core/Src/main.c **** }
 161              		.loc 1 68 23 is_stmt 0 view .LVU39
 162 0008 DA63     		str	r2, [r3, #60]
  69:Core/Src/main.c **** /* USER CODE END 0 */
 163              		.loc 1 69 1 view .LVU40
 164 000a 7047     		bx	lr
 165              	.L7:
 166              		.align	2
 167              	.L6:
 168 000c 00000000 		.word	.LANCHOR0
ARM GAS  /tmp/ccnweiy3.s 			page 11


 169              		.cfi_endproc
 170              	.LFE132:
 172              		.section	.text.Error_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	Error_Handler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 178              		.fpu fpv4-sp-d16
 180              	Error_Handler:
 181              	.LFB139:
 397:Core/Src/main.c **** 
 398:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 399:Core/Src/main.c **** 
 400:Core/Src/main.c **** /* USER CODE END 4 */
 401:Core/Src/main.c **** 
 402:Core/Src/main.c **** /**
 403:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 404:Core/Src/main.c ****   * @retval None
 405:Core/Src/main.c ****   */
 406:Core/Src/main.c **** void Error_Handler(void)
 407:Core/Src/main.c **** {
 182              		.loc 1 407 1 is_stmt 1 view -0
 183              		.cfi_startproc
 184              		@ Volatile: function does not return.
 185              		@ args = 0, pretend = 0, frame = 0
 186              		@ frame_needed = 0, uses_anonymous_args = 0
 187              		@ link register save eliminated.
 408:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 409:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 410:Core/Src/main.c ****   __disable_irq();
 188              		.loc 1 410 3 view .LVU42
 189              	.LBB7:
 190              	.LBI7:
 191              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
ARM GAS  /tmp/ccnweiy3.s 			page 12


  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  /tmp/ccnweiy3.s 			page 13


  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
ARM GAS  /tmp/ccnweiy3.s 			page 14


 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /tmp/ccnweiy3.s 			page 15


 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 192              		.loc 2 207 27 view .LVU43
 193              	.LBB8:
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 194              		.loc 2 209 3 view .LVU44
 195              		.syntax unified
 196              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 197 0000 72B6     		cpsid i
 198              	@ 0 "" 2
 199              		.thumb
 200              		.syntax unified
 201              	.L9:
 202              	.LBE8:
 203              	.LBE7:
 411:Core/Src/main.c ****   while (1)
 204              		.loc 1 411 3 discriminator 1 view .LVU45
 412:Core/Src/main.c ****   {
 413:Core/Src/main.c ****   }
 205              		.loc 1 413 3 discriminator 1 view .LVU46
 411:Core/Src/main.c ****   while (1)
 206              		.loc 1 411 9 discriminator 1 view .LVU47
 207 0002 FEE7     		b	.L9
 208              		.cfi_endproc
 209              	.LFE139:
 211              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 212              		.align	1
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu fpv4-sp-d16
 218              	MX_USART2_UART_Init:
 219              	.LFB137:
 343:Core/Src/main.c **** 
 220              		.loc 1 343 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 08B5     		push	{r3, lr}
 225              	.LCFI3:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 3, -8
 228              		.cfi_offset 14, -4
 352:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
ARM GAS  /tmp/ccnweiy3.s 			page 16


 229              		.loc 1 352 3 view .LVU49
 352:Core/Src/main.c ****   huart2.Init.BaudRate = 115200;
 230              		.loc 1 352 19 is_stmt 0 view .LVU50
 231 0002 0B48     		ldr	r0, .L14
 232 0004 0B4B     		ldr	r3, .L14+4
 233 0006 0360     		str	r3, [r0]
 353:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 234              		.loc 1 353 3 is_stmt 1 view .LVU51
 353:Core/Src/main.c ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 235              		.loc 1 353 24 is_stmt 0 view .LVU52
 236 0008 4FF4E133 		mov	r3, #115200
 237 000c 4360     		str	r3, [r0, #4]
 354:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 238              		.loc 1 354 3 is_stmt 1 view .LVU53
 354:Core/Src/main.c ****   huart2.Init.StopBits = UART_STOPBITS_1;
 239              		.loc 1 354 26 is_stmt 0 view .LVU54
 240 000e 0023     		movs	r3, #0
 241 0010 8360     		str	r3, [r0, #8]
 355:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 242              		.loc 1 355 3 is_stmt 1 view .LVU55
 355:Core/Src/main.c ****   huart2.Init.Parity = UART_PARITY_NONE;
 243              		.loc 1 355 24 is_stmt 0 view .LVU56
 244 0012 C360     		str	r3, [r0, #12]
 356:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 245              		.loc 1 356 3 is_stmt 1 view .LVU57
 356:Core/Src/main.c ****   huart2.Init.Mode = UART_MODE_TX_RX;
 246              		.loc 1 356 22 is_stmt 0 view .LVU58
 247 0014 0361     		str	r3, [r0, #16]
 357:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 248              		.loc 1 357 3 is_stmt 1 view .LVU59
 357:Core/Src/main.c ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 249              		.loc 1 357 20 is_stmt 0 view .LVU60
 250 0016 0C22     		movs	r2, #12
 251 0018 4261     		str	r2, [r0, #20]
 358:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 252              		.loc 1 358 3 is_stmt 1 view .LVU61
 358:Core/Src/main.c ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 253              		.loc 1 358 25 is_stmt 0 view .LVU62
 254 001a 8361     		str	r3, [r0, #24]
 359:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 255              		.loc 1 359 3 is_stmt 1 view .LVU63
 359:Core/Src/main.c ****   huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 256              		.loc 1 359 28 is_stmt 0 view .LVU64
 257 001c C361     		str	r3, [r0, #28]
 360:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 258              		.loc 1 360 3 is_stmt 1 view .LVU65
 360:Core/Src/main.c ****   huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 259              		.loc 1 360 30 is_stmt 0 view .LVU66
 260 001e 0362     		str	r3, [r0, #32]
 361:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 261              		.loc 1 361 3 is_stmt 1 view .LVU67
 361:Core/Src/main.c ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 262              		.loc 1 361 38 is_stmt 0 view .LVU68
 263 0020 4362     		str	r3, [r0, #36]
 362:Core/Src/main.c ****   {
 264              		.loc 1 362 3 is_stmt 1 view .LVU69
 362:Core/Src/main.c ****   {
ARM GAS  /tmp/ccnweiy3.s 			page 17


 265              		.loc 1 362 7 is_stmt 0 view .LVU70
 266 0022 FFF7FEFF 		bl	HAL_UART_Init
 267              	.LVL3:
 362:Core/Src/main.c ****   {
 268              		.loc 1 362 6 view .LVU71
 269 0026 00B9     		cbnz	r0, .L13
 370:Core/Src/main.c **** 
 270              		.loc 1 370 1 view .LVU72
 271 0028 08BD     		pop	{r3, pc}
 272              	.L13:
 364:Core/Src/main.c ****   }
 273              		.loc 1 364 5 is_stmt 1 view .LVU73
 274 002a FFF7FEFF 		bl	Error_Handler
 275              	.LVL4:
 276              	.L15:
 277 002e 00BF     		.align	2
 278              	.L14:
 279 0030 00000000 		.word	.LANCHOR1
 280 0034 00440040 		.word	1073759232
 281              		.cfi_endproc
 282              	.LFE137:
 284              		.section	.text.MX_TIM1_Init,"ax",%progbits
 285              		.align	1
 286              		.syntax unified
 287              		.thumb
 288              		.thumb_func
 289              		.fpu fpv4-sp-d16
 291              	MX_TIM1_Init:
 292              	.LFB135:
 216:Core/Src/main.c **** 
 293              		.loc 1 216 1 view -0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 88
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 10B5     		push	{r4, lr}
 298              	.LCFI4:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 4, -8
 301              		.cfi_offset 14, -4
 302 0002 96B0     		sub	sp, sp, #88
 303              	.LCFI5:
 304              		.cfi_def_cfa_offset 96
 222:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 305              		.loc 1 222 3 view .LVU75
 222:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 306              		.loc 1 222 27 is_stmt 0 view .LVU76
 307 0004 0024     		movs	r4, #0
 308 0006 1394     		str	r4, [sp, #76]
 309 0008 1494     		str	r4, [sp, #80]
 310 000a 1594     		str	r4, [sp, #84]
 223:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 311              		.loc 1 223 3 is_stmt 1 view .LVU77
 223:Core/Src/main.c ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig = {0};
 312              		.loc 1 223 22 is_stmt 0 view .LVU78
 313 000c 0C94     		str	r4, [sp, #48]
 314 000e 0D94     		str	r4, [sp, #52]
 315 0010 0E94     		str	r4, [sp, #56]
ARM GAS  /tmp/ccnweiy3.s 			page 18


 316 0012 0F94     		str	r4, [sp, #60]
 317 0014 1094     		str	r4, [sp, #64]
 318 0016 1194     		str	r4, [sp, #68]
 319 0018 1294     		str	r4, [sp, #72]
 224:Core/Src/main.c **** 
 320              		.loc 1 224 3 is_stmt 1 view .LVU79
 224:Core/Src/main.c **** 
 321              		.loc 1 224 34 is_stmt 0 view .LVU80
 322 001a 2C22     		movs	r2, #44
 323 001c 2146     		mov	r1, r4
 324 001e 01A8     		add	r0, sp, #4
 325 0020 FFF7FEFF 		bl	memset
 326              	.LVL5:
 229:Core/Src/main.c ****   htim1.Init.Prescaler = 1384-1;
 327              		.loc 1 229 3 is_stmt 1 view .LVU81
 229:Core/Src/main.c ****   htim1.Init.Prescaler = 1384-1;
 328              		.loc 1 229 18 is_stmt 0 view .LVU82
 329 0024 2C48     		ldr	r0, .L30
 330 0026 2D4B     		ldr	r3, .L30+4
 331 0028 0360     		str	r3, [r0]
 230:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 332              		.loc 1 230 3 is_stmt 1 view .LVU83
 230:Core/Src/main.c ****   htim1.Init.CounterMode = TIM_COUNTERMODE_UP;
 333              		.loc 1 230 24 is_stmt 0 view .LVU84
 334 002a 40F26753 		movw	r3, #1383
 335 002e 4360     		str	r3, [r0, #4]
 231:Core/Src/main.c ****   htim1.Init.Period = 255-1;
 336              		.loc 1 231 3 is_stmt 1 view .LVU85
 231:Core/Src/main.c ****   htim1.Init.Period = 255-1;
 337              		.loc 1 231 26 is_stmt 0 view .LVU86
 338 0030 8460     		str	r4, [r0, #8]
 232:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 339              		.loc 1 232 3 is_stmt 1 view .LVU87
 232:Core/Src/main.c ****   htim1.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 340              		.loc 1 232 21 is_stmt 0 view .LVU88
 341 0032 FE23     		movs	r3, #254
 342 0034 C360     		str	r3, [r0, #12]
 233:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 343              		.loc 1 233 3 is_stmt 1 view .LVU89
 233:Core/Src/main.c ****   htim1.Init.RepetitionCounter = 0;
 344              		.loc 1 233 28 is_stmt 0 view .LVU90
 345 0036 0461     		str	r4, [r0, #16]
 234:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 346              		.loc 1 234 3 is_stmt 1 view .LVU91
 234:Core/Src/main.c ****   htim1.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 347              		.loc 1 234 32 is_stmt 0 view .LVU92
 348 0038 4461     		str	r4, [r0, #20]
 235:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 349              		.loc 1 235 3 is_stmt 1 view .LVU93
 235:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim1) != HAL_OK)
 350              		.loc 1 235 32 is_stmt 0 view .LVU94
 351 003a 8461     		str	r4, [r0, #24]
 236:Core/Src/main.c ****   {
 352              		.loc 1 236 3 is_stmt 1 view .LVU95
 236:Core/Src/main.c ****   {
 353              		.loc 1 236 7 is_stmt 0 view .LVU96
 354 003c FFF7FEFF 		bl	HAL_TIM_PWM_Init
ARM GAS  /tmp/ccnweiy3.s 			page 19


 355              	.LVL6:
 236:Core/Src/main.c ****   {
 356              		.loc 1 236 6 view .LVU97
 357 0040 0028     		cmp	r0, #0
 358 0042 3DD1     		bne	.L24
 240:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 359              		.loc 1 240 3 is_stmt 1 view .LVU98
 240:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger2 = TIM_TRGO2_RESET;
 360              		.loc 1 240 37 is_stmt 0 view .LVU99
 361 0044 0023     		movs	r3, #0
 362 0046 1393     		str	r3, [sp, #76]
 241:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 363              		.loc 1 241 3 is_stmt 1 view .LVU100
 241:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 364              		.loc 1 241 38 is_stmt 0 view .LVU101
 365 0048 1493     		str	r3, [sp, #80]
 242:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 366              		.loc 1 242 3 is_stmt 1 view .LVU102
 242:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim1, &sMasterConfig) != HAL_OK)
 367              		.loc 1 242 33 is_stmt 0 view .LVU103
 368 004a 1593     		str	r3, [sp, #84]
 243:Core/Src/main.c ****   {
 369              		.loc 1 243 3 is_stmt 1 view .LVU104
 243:Core/Src/main.c ****   {
 370              		.loc 1 243 7 is_stmt 0 view .LVU105
 371 004c 13A9     		add	r1, sp, #76
 372 004e 2248     		ldr	r0, .L30
 373 0050 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 374              	.LVL7:
 243:Core/Src/main.c ****   {
 375              		.loc 1 243 6 view .LVU106
 376 0054 0028     		cmp	r0, #0
 377 0056 35D1     		bne	.L25
 247:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 378              		.loc 1 247 3 is_stmt 1 view .LVU107
 247:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 379              		.loc 1 247 20 is_stmt 0 view .LVU108
 380 0058 6023     		movs	r3, #96
 381 005a 0C93     		str	r3, [sp, #48]
 248:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 382              		.loc 1 248 3 is_stmt 1 view .LVU109
 248:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 383              		.loc 1 248 19 is_stmt 0 view .LVU110
 384 005c 0022     		movs	r2, #0
 385 005e 0D92     		str	r2, [sp, #52]
 249:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 386              		.loc 1 249 3 is_stmt 1 view .LVU111
 249:Core/Src/main.c ****   sConfigOC.OCNPolarity = TIM_OCNPOLARITY_HIGH;
 387              		.loc 1 249 24 is_stmt 0 view .LVU112
 388 0060 0E92     		str	r2, [sp, #56]
 250:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 389              		.loc 1 250 3 is_stmt 1 view .LVU113
 250:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 390              		.loc 1 250 25 is_stmt 0 view .LVU114
 391 0062 0F92     		str	r2, [sp, #60]
 251:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 392              		.loc 1 251 3 is_stmt 1 view .LVU115
ARM GAS  /tmp/ccnweiy3.s 			page 20


 251:Core/Src/main.c ****   sConfigOC.OCIdleState = TIM_OCIDLESTATE_RESET;
 393              		.loc 1 251 24 is_stmt 0 view .LVU116
 394 0064 1092     		str	r2, [sp, #64]
 252:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 395              		.loc 1 252 3 is_stmt 1 view .LVU117
 252:Core/Src/main.c ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_RESET;
 396              		.loc 1 252 25 is_stmt 0 view .LVU118
 397 0066 1192     		str	r2, [sp, #68]
 253:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 398              		.loc 1 253 3 is_stmt 1 view .LVU119
 253:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim1, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 399              		.loc 1 253 26 is_stmt 0 view .LVU120
 400 0068 1292     		str	r2, [sp, #72]
 254:Core/Src/main.c ****   {
 401              		.loc 1 254 3 is_stmt 1 view .LVU121
 254:Core/Src/main.c ****   {
 402              		.loc 1 254 7 is_stmt 0 view .LVU122
 403 006a 0CA9     		add	r1, sp, #48
 404 006c 1A48     		ldr	r0, .L30
 405 006e FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 406              	.LVL8:
 254:Core/Src/main.c ****   {
 407              		.loc 1 254 6 view .LVU123
 408 0072 48BB     		cbnz	r0, .L26
 258:Core/Src/main.c ****   {
 409              		.loc 1 258 3 is_stmt 1 view .LVU124
 258:Core/Src/main.c ****   {
 410              		.loc 1 258 7 is_stmt 0 view .LVU125
 411 0074 0422     		movs	r2, #4
 412 0076 0CA9     		add	r1, sp, #48
 413 0078 1748     		ldr	r0, .L30
 414 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 415              	.LVL9:
 258:Core/Src/main.c ****   {
 416              		.loc 1 258 6 view .LVU126
 417 007e 28BB     		cbnz	r0, .L27
 262:Core/Src/main.c ****   {
 418              		.loc 1 262 3 is_stmt 1 view .LVU127
 262:Core/Src/main.c ****   {
 419              		.loc 1 262 7 is_stmt 0 view .LVU128
 420 0080 0822     		movs	r2, #8
 421 0082 0CA9     		add	r1, sp, #48
 422 0084 1448     		ldr	r0, .L30
 423 0086 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 424              	.LVL10:
 262:Core/Src/main.c ****   {
 425              		.loc 1 262 6 view .LVU129
 426 008a 08BB     		cbnz	r0, .L28
 266:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 427              		.loc 1 266 3 is_stmt 1 view .LVU130
 266:Core/Src/main.c ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_DISABLE;
 428              		.loc 1 266 40 is_stmt 0 view .LVU131
 429 008c 0023     		movs	r3, #0
 430 008e 0193     		str	r3, [sp, #4]
 267:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
 431              		.loc 1 267 3 is_stmt 1 view .LVU132
 267:Core/Src/main.c ****   sBreakDeadTimeConfig.LockLevel = TIM_LOCKLEVEL_OFF;
ARM GAS  /tmp/ccnweiy3.s 			page 21


 432              		.loc 1 267 41 is_stmt 0 view .LVU133
 433 0090 0293     		str	r3, [sp, #8]
 268:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 434              		.loc 1 268 3 is_stmt 1 view .LVU134
 268:Core/Src/main.c ****   sBreakDeadTimeConfig.DeadTime = 0;
 435              		.loc 1 268 34 is_stmt 0 view .LVU135
 436 0092 0393     		str	r3, [sp, #12]
 269:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 437              		.loc 1 269 3 is_stmt 1 view .LVU136
 269:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakState = TIM_BREAK_DISABLE;
 438              		.loc 1 269 33 is_stmt 0 view .LVU137
 439 0094 0493     		str	r3, [sp, #16]
 270:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 440              		.loc 1 270 3 is_stmt 1 view .LVU138
 270:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakPolarity = TIM_BREAKPOLARITY_HIGH;
 441              		.loc 1 270 35 is_stmt 0 view .LVU139
 442 0096 0593     		str	r3, [sp, #20]
 271:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 443              		.loc 1 271 3 is_stmt 1 view .LVU140
 271:Core/Src/main.c ****   sBreakDeadTimeConfig.BreakFilter = 0;
 444              		.loc 1 271 38 is_stmt 0 view .LVU141
 445 0098 4FF40052 		mov	r2, #8192
 446 009c 0692     		str	r2, [sp, #24]
 272:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 447              		.loc 1 272 3 is_stmt 1 view .LVU142
 272:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2State = TIM_BREAK2_DISABLE;
 448              		.loc 1 272 36 is_stmt 0 view .LVU143
 449 009e 0793     		str	r3, [sp, #28]
 273:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 450              		.loc 1 273 3 is_stmt 1 view .LVU144
 273:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Polarity = TIM_BREAK2POLARITY_HIGH;
 451              		.loc 1 273 36 is_stmt 0 view .LVU145
 452 00a0 0893     		str	r3, [sp, #32]
 274:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 453              		.loc 1 274 3 is_stmt 1 view .LVU146
 274:Core/Src/main.c ****   sBreakDeadTimeConfig.Break2Filter = 0;
 454              		.loc 1 274 39 is_stmt 0 view .LVU147
 455 00a2 4FF00072 		mov	r2, #33554432
 456 00a6 0992     		str	r2, [sp, #36]
 275:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 457              		.loc 1 275 3 is_stmt 1 view .LVU148
 275:Core/Src/main.c ****   sBreakDeadTimeConfig.AutomaticOutput = TIM_AUTOMATICOUTPUT_DISABLE;
 458              		.loc 1 275 37 is_stmt 0 view .LVU149
 459 00a8 0A93     		str	r3, [sp, #40]
 276:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 460              		.loc 1 276 3 is_stmt 1 view .LVU150
 276:Core/Src/main.c ****   if (HAL_TIMEx_ConfigBreakDeadTime(&htim1, &sBreakDeadTimeConfig) != HAL_OK)
 461              		.loc 1 276 40 is_stmt 0 view .LVU151
 462 00aa 0B93     		str	r3, [sp, #44]
 277:Core/Src/main.c ****   {
 463              		.loc 1 277 3 is_stmt 1 view .LVU152
 277:Core/Src/main.c ****   {
 464              		.loc 1 277 7 is_stmt 0 view .LVU153
 465 00ac 01A9     		add	r1, sp, #4
 466 00ae 0A48     		ldr	r0, .L30
 467 00b0 FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 468              	.LVL11:
ARM GAS  /tmp/ccnweiy3.s 			page 22


 277:Core/Src/main.c ****   {
 469              		.loc 1 277 6 view .LVU154
 470 00b4 70B9     		cbnz	r0, .L29
 284:Core/Src/main.c **** 
 471              		.loc 1 284 3 is_stmt 1 view .LVU155
 472 00b6 0848     		ldr	r0, .L30
 473 00b8 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 474              	.LVL12:
 286:Core/Src/main.c **** 
 475              		.loc 1 286 1 is_stmt 0 view .LVU156
 476 00bc 16B0     		add	sp, sp, #88
 477              	.LCFI6:
 478              		.cfi_remember_state
 479              		.cfi_def_cfa_offset 8
 480              		@ sp needed
 481 00be 10BD     		pop	{r4, pc}
 482              	.L24:
 483              	.LCFI7:
 484              		.cfi_restore_state
 238:Core/Src/main.c ****   }
 485              		.loc 1 238 5 is_stmt 1 view .LVU157
 486 00c0 FFF7FEFF 		bl	Error_Handler
 487              	.LVL13:
 488              	.L25:
 245:Core/Src/main.c ****   }
 489              		.loc 1 245 5 view .LVU158
 490 00c4 FFF7FEFF 		bl	Error_Handler
 491              	.LVL14:
 492              	.L26:
 256:Core/Src/main.c ****   }
 493              		.loc 1 256 5 view .LVU159
 494 00c8 FFF7FEFF 		bl	Error_Handler
 495              	.LVL15:
 496              	.L27:
 260:Core/Src/main.c ****   }
 497              		.loc 1 260 5 view .LVU160
 498 00cc FFF7FEFF 		bl	Error_Handler
 499              	.LVL16:
 500              	.L28:
 264:Core/Src/main.c ****   }
 501              		.loc 1 264 5 view .LVU161
 502 00d0 FFF7FEFF 		bl	Error_Handler
 503              	.LVL17:
 504              	.L29:
 279:Core/Src/main.c ****   }
 505              		.loc 1 279 5 view .LVU162
 506 00d4 FFF7FEFF 		bl	Error_Handler
 507              	.LVL18:
 508              	.L31:
 509              		.align	2
 510              	.L30:
 511 00d8 00000000 		.word	.LANCHOR0
 512 00dc 002C0140 		.word	1073818624
 513              		.cfi_endproc
 514              	.LFE135:
 516              		.section	.text.MX_TIM2_Init,"ax",%progbits
 517              		.align	1
ARM GAS  /tmp/ccnweiy3.s 			page 23


 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 521              		.fpu fpv4-sp-d16
 523              	MX_TIM2_Init:
 524              	.LFB136:
 294:Core/Src/main.c **** 
 525              		.loc 1 294 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 40
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 00B5     		push	{lr}
 530              	.LCFI8:
 531              		.cfi_def_cfa_offset 4
 532              		.cfi_offset 14, -4
 533 0002 8BB0     		sub	sp, sp, #44
 534              	.LCFI9:
 535              		.cfi_def_cfa_offset 48
 300:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 536              		.loc 1 300 3 view .LVU164
 300:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 537              		.loc 1 300 27 is_stmt 0 view .LVU165
 538 0004 0023     		movs	r3, #0
 539 0006 0793     		str	r3, [sp, #28]
 540 0008 0893     		str	r3, [sp, #32]
 541 000a 0993     		str	r3, [sp, #36]
 301:Core/Src/main.c **** 
 542              		.loc 1 301 3 is_stmt 1 view .LVU166
 301:Core/Src/main.c **** 
 543              		.loc 1 301 22 is_stmt 0 view .LVU167
 544 000c 0093     		str	r3, [sp]
 545 000e 0193     		str	r3, [sp, #4]
 546 0010 0293     		str	r3, [sp, #8]
 547 0012 0393     		str	r3, [sp, #12]
 548 0014 0493     		str	r3, [sp, #16]
 549 0016 0593     		str	r3, [sp, #20]
 550 0018 0693     		str	r3, [sp, #24]
 306:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 551              		.loc 1 306 3 is_stmt 1 view .LVU168
 306:Core/Src/main.c ****   htim2.Init.Prescaler = 0;
 552              		.loc 1 306 18 is_stmt 0 view .LVU169
 553 001a 1748     		ldr	r0, .L40
 554 001c 4FF08042 		mov	r2, #1073741824
 555 0020 0260     		str	r2, [r0]
 307:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 556              		.loc 1 307 3 is_stmt 1 view .LVU170
 307:Core/Src/main.c ****   htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 557              		.loc 1 307 24 is_stmt 0 view .LVU171
 558 0022 4360     		str	r3, [r0, #4]
 308:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 559              		.loc 1 308 3 is_stmt 1 view .LVU172
 308:Core/Src/main.c ****   htim2.Init.Period = 4294967295;
 560              		.loc 1 308 26 is_stmt 0 view .LVU173
 561 0024 8360     		str	r3, [r0, #8]
 309:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 562              		.loc 1 309 3 is_stmt 1 view .LVU174
 309:Core/Src/main.c ****   htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
ARM GAS  /tmp/ccnweiy3.s 			page 24


 563              		.loc 1 309 21 is_stmt 0 view .LVU175
 564 0026 4FF0FF32 		mov	r2, #-1
 565 002a C260     		str	r2, [r0, #12]
 310:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 566              		.loc 1 310 3 is_stmt 1 view .LVU176
 310:Core/Src/main.c ****   htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 567              		.loc 1 310 28 is_stmt 0 view .LVU177
 568 002c 0361     		str	r3, [r0, #16]
 311:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 569              		.loc 1 311 3 is_stmt 1 view .LVU178
 311:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 570              		.loc 1 311 32 is_stmt 0 view .LVU179
 571 002e 8361     		str	r3, [r0, #24]
 312:Core/Src/main.c ****   {
 572              		.loc 1 312 3 is_stmt 1 view .LVU180
 312:Core/Src/main.c ****   {
 573              		.loc 1 312 7 is_stmt 0 view .LVU181
 574 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 575              	.LVL19:
 312:Core/Src/main.c ****   {
 576              		.loc 1 312 6 view .LVU182
 577 0034 C8B9     		cbnz	r0, .L37
 316:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 578              		.loc 1 316 3 is_stmt 1 view .LVU183
 316:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 579              		.loc 1 316 37 is_stmt 0 view .LVU184
 580 0036 0023     		movs	r3, #0
 581 0038 0793     		str	r3, [sp, #28]
 317:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 582              		.loc 1 317 3 is_stmt 1 view .LVU185
 317:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 583              		.loc 1 317 33 is_stmt 0 view .LVU186
 584 003a 0993     		str	r3, [sp, #36]
 318:Core/Src/main.c ****   {
 585              		.loc 1 318 3 is_stmt 1 view .LVU187
 318:Core/Src/main.c ****   {
 586              		.loc 1 318 7 is_stmt 0 view .LVU188
 587 003c 07A9     		add	r1, sp, #28
 588 003e 0E48     		ldr	r0, .L40
 589 0040 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 590              	.LVL20:
 318:Core/Src/main.c ****   {
 591              		.loc 1 318 6 view .LVU189
 592 0044 98B9     		cbnz	r0, .L38
 322:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 593              		.loc 1 322 3 is_stmt 1 view .LVU190
 322:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 594              		.loc 1 322 20 is_stmt 0 view .LVU191
 595 0046 6023     		movs	r3, #96
 596 0048 0093     		str	r3, [sp]
 323:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 597              		.loc 1 323 3 is_stmt 1 view .LVU192
 323:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 598              		.loc 1 323 19 is_stmt 0 view .LVU193
 599 004a 0023     		movs	r3, #0
 600 004c 0193     		str	r3, [sp, #4]
 324:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
ARM GAS  /tmp/ccnweiy3.s 			page 25


 601              		.loc 1 324 3 is_stmt 1 view .LVU194
 324:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 602              		.loc 1 324 24 is_stmt 0 view .LVU195
 603 004e 0293     		str	r3, [sp, #8]
 325:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 604              		.loc 1 325 3 is_stmt 1 view .LVU196
 325:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 605              		.loc 1 325 24 is_stmt 0 view .LVU197
 606 0050 0493     		str	r3, [sp, #16]
 326:Core/Src/main.c ****   {
 607              		.loc 1 326 3 is_stmt 1 view .LVU198
 326:Core/Src/main.c ****   {
 608              		.loc 1 326 7 is_stmt 0 view .LVU199
 609 0052 0422     		movs	r2, #4
 610 0054 6946     		mov	r1, sp
 611 0056 0848     		ldr	r0, .L40
 612 0058 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 613              	.LVL21:
 326:Core/Src/main.c ****   {
 614              		.loc 1 326 6 view .LVU200
 615 005c 48B9     		cbnz	r0, .L39
 333:Core/Src/main.c **** 
 616              		.loc 1 333 3 is_stmt 1 view .LVU201
 617 005e 0648     		ldr	r0, .L40
 618 0060 FFF7FEFF 		bl	HAL_TIM_MspPostInit
 619              	.LVL22:
 335:Core/Src/main.c **** 
 620              		.loc 1 335 1 is_stmt 0 view .LVU202
 621 0064 0BB0     		add	sp, sp, #44
 622              	.LCFI10:
 623              		.cfi_remember_state
 624              		.cfi_def_cfa_offset 4
 625              		@ sp needed
 626 0066 5DF804FB 		ldr	pc, [sp], #4
 627              	.L37:
 628              	.LCFI11:
 629              		.cfi_restore_state
 314:Core/Src/main.c ****   }
 630              		.loc 1 314 5 is_stmt 1 view .LVU203
 631 006a FFF7FEFF 		bl	Error_Handler
 632              	.LVL23:
 633              	.L38:
 320:Core/Src/main.c ****   }
 634              		.loc 1 320 5 view .LVU204
 635 006e FFF7FEFF 		bl	Error_Handler
 636              	.LVL24:
 637              	.L39:
 328:Core/Src/main.c ****   }
 638              		.loc 1 328 5 view .LVU205
 639 0072 FFF7FEFF 		bl	Error_Handler
 640              	.LVL25:
 641              	.L41:
 642 0076 00BF     		.align	2
 643              	.L40:
 644 0078 00000000 		.word	.LANCHOR2
 645              		.cfi_endproc
 646              	.LFE136:
ARM GAS  /tmp/ccnweiy3.s 			page 26


 648              		.section	.text.SystemClock_Config,"ax",%progbits
 649              		.align	1
 650              		.global	SystemClock_Config
 651              		.syntax unified
 652              		.thumb
 653              		.thumb_func
 654              		.fpu fpv4-sp-d16
 656              	SystemClock_Config:
 657              	.LFB134:
 155:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 658              		.loc 1 155 1 view -0
 659              		.cfi_startproc
 660              		@ args = 0, pretend = 0, frame = 88
 661              		@ frame_needed = 0, uses_anonymous_args = 0
 662 0000 00B5     		push	{lr}
 663              	.LCFI12:
 664              		.cfi_def_cfa_offset 4
 665              		.cfi_offset 14, -4
 666 0002 97B0     		sub	sp, sp, #92
 667              	.LCFI13:
 668              		.cfi_def_cfa_offset 96
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 669              		.loc 1 156 3 view .LVU207
 156:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 670              		.loc 1 156 22 is_stmt 0 view .LVU208
 671 0004 4422     		movs	r2, #68
 672 0006 0021     		movs	r1, #0
 673 0008 05A8     		add	r0, sp, #20
 674 000a FFF7FEFF 		bl	memset
 675              	.LVL26:
 157:Core/Src/main.c **** 
 676              		.loc 1 157 3 is_stmt 1 view .LVU209
 157:Core/Src/main.c **** 
 677              		.loc 1 157 22 is_stmt 0 view .LVU210
 678 000e 0023     		movs	r3, #0
 679 0010 0093     		str	r3, [sp]
 680 0012 0193     		str	r3, [sp, #4]
 681 0014 0293     		str	r3, [sp, #8]
 682 0016 0393     		str	r3, [sp, #12]
 683 0018 0493     		str	r3, [sp, #16]
 161:Core/Src/main.c ****   {
 684              		.loc 1 161 3 is_stmt 1 view .LVU211
 161:Core/Src/main.c ****   {
 685              		.loc 1 161 7 is_stmt 0 view .LVU212
 686 001a 4FF40070 		mov	r0, #512
 687 001e FFF7FEFF 		bl	HAL_PWREx_ControlVoltageScaling
 688              	.LVL27:
 161:Core/Src/main.c ****   {
 689              		.loc 1 161 6 view .LVU213
 690 0022 0028     		cmp	r0, #0
 691 0024 31D1     		bne	.L47
 168:Core/Src/main.c ****   __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 692              		.loc 1 168 3 is_stmt 1 view .LVU214
 693 0026 FFF7FEFF 		bl	HAL_PWR_EnableBkUpAccess
 694              	.LVL28:
 169:Core/Src/main.c **** 
 695              		.loc 1 169 3 view .LVU215
ARM GAS  /tmp/ccnweiy3.s 			page 27


 696 002a 1B4A     		ldr	r2, .L50
 697 002c D2F89030 		ldr	r3, [r2, #144]
 698 0030 23F01803 		bic	r3, r3, #24
 699 0034 C2F89030 		str	r3, [r2, #144]
 174:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 700              		.loc 1 174 3 view .LVU216
 174:Core/Src/main.c ****   RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 701              		.loc 1 174 36 is_stmt 0 view .LVU217
 702 0038 1423     		movs	r3, #20
 703 003a 0593     		str	r3, [sp, #20]
 175:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 704              		.loc 1 175 3 is_stmt 1 view .LVU218
 175:Core/Src/main.c ****   RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 705              		.loc 1 175 30 is_stmt 0 view .LVU219
 706 003c 0123     		movs	r3, #1
 707 003e 0793     		str	r3, [sp, #28]
 176:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 708              		.loc 1 176 3 is_stmt 1 view .LVU220
 176:Core/Src/main.c ****   RCC_OscInitStruct.MSICalibrationValue = 0;
 709              		.loc 1 176 30 is_stmt 0 view .LVU221
 710 0040 0B93     		str	r3, [sp, #44]
 177:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 711              		.loc 1 177 3 is_stmt 1 view .LVU222
 177:Core/Src/main.c ****   RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 712              		.loc 1 177 41 is_stmt 0 view .LVU223
 713 0042 0022     		movs	r2, #0
 714 0044 0C92     		str	r2, [sp, #48]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 715              		.loc 1 178 3 is_stmt 1 view .LVU224
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 716              		.loc 1 178 35 is_stmt 0 view .LVU225
 717 0046 6022     		movs	r2, #96
 718 0048 0D92     		str	r2, [sp, #52]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 719              		.loc 1 179 3 is_stmt 1 view .LVU226
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 720              		.loc 1 179 34 is_stmt 0 view .LVU227
 721 004a 0222     		movs	r2, #2
 722 004c 0F92     		str	r2, [sp, #60]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 723              		.loc 1 180 3 is_stmt 1 view .LVU228
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 1;
 724              		.loc 1 180 35 is_stmt 0 view .LVU229
 725 004e 1093     		str	r3, [sp, #64]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 726              		.loc 1 181 3 is_stmt 1 view .LVU230
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 16;
 727              		.loc 1 181 30 is_stmt 0 view .LVU231
 728 0050 1193     		str	r3, [sp, #68]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 729              		.loc 1 182 3 is_stmt 1 view .LVU232
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV7;
 730              		.loc 1 182 30 is_stmt 0 view .LVU233
 731 0052 1023     		movs	r3, #16
 732 0054 1293     		str	r3, [sp, #72]
 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 733              		.loc 1 183 3 is_stmt 1 view .LVU234
ARM GAS  /tmp/ccnweiy3.s 			page 28


 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 734              		.loc 1 183 30 is_stmt 0 view .LVU235
 735 0056 0723     		movs	r3, #7
 736 0058 1393     		str	r3, [sp, #76]
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 737              		.loc 1 184 3 is_stmt 1 view .LVU236
 184:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 738              		.loc 1 184 30 is_stmt 0 view .LVU237
 739 005a 1492     		str	r2, [sp, #80]
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 740              		.loc 1 185 3 is_stmt 1 view .LVU238
 185:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 741              		.loc 1 185 30 is_stmt 0 view .LVU239
 742 005c 1592     		str	r2, [sp, #84]
 186:Core/Src/main.c ****   {
 743              		.loc 1 186 3 is_stmt 1 view .LVU240
 186:Core/Src/main.c ****   {
 744              		.loc 1 186 7 is_stmt 0 view .LVU241
 745 005e 05A8     		add	r0, sp, #20
 746 0060 FFF7FEFF 		bl	HAL_RCC_OscConfig
 747              	.LVL29:
 186:Core/Src/main.c ****   {
 748              		.loc 1 186 6 view .LVU242
 749 0064 98B9     		cbnz	r0, .L48
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 750              		.loc 1 193 3 is_stmt 1 view .LVU243
 193:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 751              		.loc 1 193 31 is_stmt 0 view .LVU244
 752 0066 0F23     		movs	r3, #15
 753 0068 0093     		str	r3, [sp]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 754              		.loc 1 195 3 is_stmt 1 view .LVU245
 195:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 755              		.loc 1 195 34 is_stmt 0 view .LVU246
 756 006a 0323     		movs	r3, #3
 757 006c 0193     		str	r3, [sp, #4]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 758              		.loc 1 196 3 is_stmt 1 view .LVU247
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 759              		.loc 1 196 35 is_stmt 0 view .LVU248
 760 006e 0023     		movs	r3, #0
 761 0070 0293     		str	r3, [sp, #8]
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 762              		.loc 1 197 3 is_stmt 1 view .LVU249
 197:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 763              		.loc 1 197 36 is_stmt 0 view .LVU250
 764 0072 0393     		str	r3, [sp, #12]
 198:Core/Src/main.c **** 
 765              		.loc 1 198 3 is_stmt 1 view .LVU251
 198:Core/Src/main.c **** 
 766              		.loc 1 198 36 is_stmt 0 view .LVU252
 767 0074 0493     		str	r3, [sp, #16]
 200:Core/Src/main.c ****   {
 768              		.loc 1 200 3 is_stmt 1 view .LVU253
 200:Core/Src/main.c ****   {
 769              		.loc 1 200 7 is_stmt 0 view .LVU254
 770 0076 0121     		movs	r1, #1
ARM GAS  /tmp/ccnweiy3.s 			page 29


 771 0078 6846     		mov	r0, sp
 772 007a FFF7FEFF 		bl	HAL_RCC_ClockConfig
 773              	.LVL30:
 200:Core/Src/main.c ****   {
 774              		.loc 1 200 6 view .LVU255
 775 007e 40B9     		cbnz	r0, .L49
 207:Core/Src/main.c **** }
 776              		.loc 1 207 3 is_stmt 1 view .LVU256
 777 0080 FFF7FEFF 		bl	HAL_RCCEx_EnableMSIPLLMode
 778              	.LVL31:
 208:Core/Src/main.c **** 
 779              		.loc 1 208 1 is_stmt 0 view .LVU257
 780 0084 17B0     		add	sp, sp, #92
 781              	.LCFI14:
 782              		.cfi_remember_state
 783              		.cfi_def_cfa_offset 4
 784              		@ sp needed
 785 0086 5DF804FB 		ldr	pc, [sp], #4
 786              	.L47:
 787              	.LCFI15:
 788              		.cfi_restore_state
 163:Core/Src/main.c ****   }
 789              		.loc 1 163 5 is_stmt 1 view .LVU258
 790 008a FFF7FEFF 		bl	Error_Handler
 791              	.LVL32:
 792              	.L48:
 188:Core/Src/main.c ****   }
 793              		.loc 1 188 5 view .LVU259
 794 008e FFF7FEFF 		bl	Error_Handler
 795              	.LVL33:
 796              	.L49:
 202:Core/Src/main.c ****   }
 797              		.loc 1 202 5 view .LVU260
 798 0092 FFF7FEFF 		bl	Error_Handler
 799              	.LVL34:
 800              	.L51:
 801 0096 00BF     		.align	2
 802              	.L50:
 803 0098 00100240 		.word	1073876992
 804              		.cfi_endproc
 805              	.LFE134:
 807              		.section	.text.main,"ax",%progbits
 808              		.align	1
 809              		.global	main
 810              		.syntax unified
 811              		.thumb
 812              		.thumb_func
 813              		.fpu fpv4-sp-d16
 815              	main:
 816              	.LFB133:
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 817              		.loc 1 77 1 view -0
 818              		.cfi_startproc
 819              		@ Volatile: function does not return.
 820              		@ args = 0, pretend = 0, frame = 0
 821              		@ frame_needed = 0, uses_anonymous_args = 0
 822 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccnweiy3.s 			page 30


 823              	.LCFI16:
 824              		.cfi_def_cfa_offset 8
 825              		.cfi_offset 3, -8
 826              		.cfi_offset 14, -4
  85:Core/Src/main.c **** 
 827              		.loc 1 85 3 view .LVU262
 828 0002 FFF7FEFF 		bl	HAL_Init
 829              	.LVL35:
  92:Core/Src/main.c **** 
 830              		.loc 1 92 3 view .LVU263
 831 0006 FFF7FEFF 		bl	SystemClock_Config
 832              	.LVL36:
  99:Core/Src/main.c ****   MX_USART2_UART_Init();
 833              		.loc 1 99 3 view .LVU264
 834 000a FFF7FEFF 		bl	MX_GPIO_Init
 835              	.LVL37:
 100:Core/Src/main.c ****   MX_TIM1_Init();
 836              		.loc 1 100 3 view .LVU265
 837 000e FFF7FEFF 		bl	MX_USART2_UART_Init
 838              	.LVL38:
 101:Core/Src/main.c ****   MX_TIM2_Init();
 839              		.loc 1 101 3 view .LVU266
 840 0012 FFF7FEFF 		bl	MX_TIM1_Init
 841              	.LVL39:
 102:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 842              		.loc 1 102 3 view .LVU267
 843 0016 FFF7FEFF 		bl	MX_TIM2_Init
 844              	.LVL40:
 105:Core/Src/main.c ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_2);
 845              		.loc 1 105 3 view .LVU268
 846 001a 344C     		ldr	r4, .L55
 847 001c 0021     		movs	r1, #0
 848 001e 2046     		mov	r0, r4
 849 0020 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 850              	.LVL41:
 106:Core/Src/main.c ****   HAL_TIM_PWM_Start (&htim1, TIM_CHANNEL_3);
 851              		.loc 1 106 3 view .LVU269
 852 0024 0421     		movs	r1, #4
 853 0026 2046     		mov	r0, r4
 854 0028 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 855              	.LVL42:
 107:Core/Src/main.c ****   /* USER CODE END 2 */
 856              		.loc 1 107 3 view .LVU270
 857 002c 0821     		movs	r1, #8
 858 002e 2046     		mov	r0, r4
 859 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 860              	.LVL43:
 861              	.L53:
 112:Core/Src/main.c ****   {
 862              		.loc 1 112 3 discriminator 1 view .LVU271
 115:Core/Src/main.c ****    HAL_Delay(1200);
 863              		.loc 1 115 4 discriminator 1 view .LVU272
 864 0034 0022     		movs	r2, #0
 865 0036 1146     		mov	r1, r2
 866 0038 FF20     		movs	r0, #255
 867 003a FFF7FEFF 		bl	setcolor
 868              	.LVL44:
ARM GAS  /tmp/ccnweiy3.s 			page 31


 116:Core/Src/main.c **** 
 869              		.loc 1 116 4 discriminator 1 view .LVU273
 870 003e 4FF49660 		mov	r0, #1200
 871 0042 FFF7FEFF 		bl	HAL_Delay
 872              	.LVL45:
 118:Core/Src/main.c ****    HAL_Delay(1200);
 873              		.loc 1 118 4 discriminator 1 view .LVU274
 874 0046 0022     		movs	r2, #0
 875 0048 FF21     		movs	r1, #255
 876 004a 1046     		mov	r0, r2
 877 004c FFF7FEFF 		bl	setcolor
 878              	.LVL46:
 119:Core/Src/main.c **** 
 879              		.loc 1 119 4 discriminator 1 view .LVU275
 880 0050 4FF49660 		mov	r0, #1200
 881 0054 FFF7FEFF 		bl	HAL_Delay
 882              	.LVL47:
 121:Core/Src/main.c ****    HAL_Delay(1200);
 883              		.loc 1 121 4 discriminator 1 view .LVU276
 884 0058 FF22     		movs	r2, #255
 885 005a 0021     		movs	r1, #0
 886 005c 0846     		mov	r0, r1
 887 005e FFF7FEFF 		bl	setcolor
 888              	.LVL48:
 122:Core/Src/main.c **** 
 889              		.loc 1 122 4 discriminator 1 view .LVU277
 890 0062 4FF49660 		mov	r0, #1200
 891 0066 FFF7FEFF 		bl	HAL_Delay
 892              	.LVL49:
 124:Core/Src/main.c ****    HAL_Delay(1200);
 893              		.loc 1 124 4 discriminator 1 view .LVU278
 894 006a FF22     		movs	r2, #255
 895 006c 0021     		movs	r1, #0
 896 006e 1046     		mov	r0, r2
 897 0070 FFF7FEFF 		bl	setcolor
 898              	.LVL50:
 125:Core/Src/main.c **** 
 899              		.loc 1 125 4 discriminator 1 view .LVU279
 900 0074 4FF49660 		mov	r0, #1200
 901 0078 FFF7FEFF 		bl	HAL_Delay
 902              	.LVL51:
 127:Core/Src/main.c ****    HAL_Delay(1200);
 903              		.loc 1 127 4 discriminator 1 view .LVU280
 904 007c 0022     		movs	r2, #0
 905 007e FF21     		movs	r1, #255
 906 0080 0846     		mov	r0, r1
 907 0082 FFF7FEFF 		bl	setcolor
 908              	.LVL52:
 128:Core/Src/main.c **** 
 909              		.loc 1 128 4 discriminator 1 view .LVU281
 910 0086 4FF49660 		mov	r0, #1200
 911 008a FFF7FEFF 		bl	HAL_Delay
 912              	.LVL53:
 130:Core/Src/main.c ****    HAL_Delay(1200);
 913              		.loc 1 130 4 discriminator 1 view .LVU282
 914 008e FF22     		movs	r2, #255
 915 0090 1146     		mov	r1, r2
ARM GAS  /tmp/ccnweiy3.s 			page 32


 916 0092 0020     		movs	r0, #0
 917 0094 FFF7FEFF 		bl	setcolor
 918              	.LVL54:
 131:Core/Src/main.c ****    
 919              		.loc 1 131 4 discriminator 1 view .LVU283
 920 0098 4FF49660 		mov	r0, #1200
 921 009c FFF7FEFF 		bl	HAL_Delay
 922              	.LVL55:
 133:Core/Src/main.c ****    HAL_Delay(1200);
 923              		.loc 1 133 4 discriminator 1 view .LVU284
 924 00a0 7F22     		movs	r2, #127
 925 00a2 0021     		movs	r1, #0
 926 00a4 FF20     		movs	r0, #255
 927 00a6 FFF7FEFF 		bl	setcolor
 928              	.LVL56:
 134:Core/Src/main.c ****    
 929              		.loc 1 134 4 discriminator 1 view .LVU285
 930 00aa 4FF49660 		mov	r0, #1200
 931 00ae FFF7FEFF 		bl	HAL_Delay
 932              	.LVL57:
 136:Core/Src/main.c ****    HAL_Delay(1200);
 933              		.loc 1 136 4 discriminator 1 view .LVU286
 934 00b2 FF22     		movs	r2, #255
 935 00b4 0021     		movs	r1, #0
 936 00b6 7F20     		movs	r0, #127
 937 00b8 FFF7FEFF 		bl	setcolor
 938              	.LVL58:
 137:Core/Src/main.c ****    
 939              		.loc 1 137 4 discriminator 1 view .LVU287
 940 00bc 4FF49660 		mov	r0, #1200
 941 00c0 FFF7FEFF 		bl	HAL_Delay
 942              	.LVL59:
 139:Core/Src/main.c ****    HAL_Delay(1200);
 943              		.loc 1 139 4 discriminator 1 view .LVU288
 944 00c4 0022     		movs	r2, #0
 945 00c6 7F21     		movs	r1, #127
 946 00c8 FF20     		movs	r0, #255
 947 00ca FFF7FEFF 		bl	setcolor
 948              	.LVL60:
 140:Core/Src/main.c ****    
 949              		.loc 1 140 4 discriminator 1 view .LVU289
 950 00ce 4FF49660 		mov	r0, #1200
 951 00d2 FFF7FEFF 		bl	HAL_Delay
 952              	.LVL61:
 142:Core/Src/main.c ****    HAL_Delay(1200);
 953              		.loc 1 142 4 discriminator 1 view .LVU290
 954 00d6 FA22     		movs	r2, #250
 955 00d8 E621     		movs	r1, #230
 956 00da 0846     		mov	r0, r1
 957 00dc FFF7FEFF 		bl	setcolor
 958              	.LVL62:
 143:Core/Src/main.c **** 
 959              		.loc 1 143 4 discriminator 1 view .LVU291
 960 00e0 4FF49660 		mov	r0, #1200
 961 00e4 FFF7FEFF 		bl	HAL_Delay
 962              	.LVL63:
 112:Core/Src/main.c ****   {
ARM GAS  /tmp/ccnweiy3.s 			page 33


 963              		.loc 1 112 9 discriminator 1 view .LVU292
 964 00e8 A4E7     		b	.L53
 965              	.L56:
 966 00ea 00BF     		.align	2
 967              	.L55:
 968 00ec 00000000 		.word	.LANCHOR0
 969              		.cfi_endproc
 970              	.LFE133:
 972              		.global	huart2
 973              		.global	htim2
 974              		.global	htim1
 975              		.section	.bss.htim1,"aw",%nobits
 976              		.align	2
 977              		.set	.LANCHOR0,. + 0
 980              	htim1:
 981 0000 00000000 		.space	76
 981      00000000 
 981      00000000 
 981      00000000 
 981      00000000 
 982              		.section	.bss.htim2,"aw",%nobits
 983              		.align	2
 984              		.set	.LANCHOR2,. + 0
 987              	htim2:
 988 0000 00000000 		.space	76
 988      00000000 
 988      00000000 
 988      00000000 
 988      00000000 
 989              		.section	.bss.huart2,"aw",%nobits
 990              		.align	2
 991              		.set	.LANCHOR1,. + 0
 994              	huart2:
 995 0000 00000000 		.space	132
 995      00000000 
 995      00000000 
 995      00000000 
 995      00000000 
 996              		.text
 997              	.Letext0:
 998              		.file 3 "/usr/lib/gcc/arm-none-eabi/10.3.1/include/stdint.h"
 999              		.file 4 "Drivers/CMSIS/Device/ST/STM32L4xx/Include/stm32l432xx.h"
 1000              		.file 5 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_def.h"
 1001              		.file 6 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc.h"
 1002              		.file 7 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_gpio.h"
 1003              		.file 8 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_dma.h"
 1004              		.file 9 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim.h"
 1005              		.file 10 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_uart.h"
 1006              		.file 11 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_tim_ex.h"
 1007              		.file 12 "Core/Inc/main.h"
 1008              		.file 13 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr_ex.h"
 1009              		.file 14 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_pwr.h"
 1010              		.file 15 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal_rcc_ex.h"
 1011              		.file 16 "Drivers/STM32L4xx_HAL_Driver/Inc/stm32l4xx_hal.h"
 1012              		.file 17 "<built-in>"
ARM GAS  /tmp/ccnweiy3.s 			page 34


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccnweiy3.s:18     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccnweiy3.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccnweiy3.s:130    .text.MX_GPIO_Init:000000000000006c $d
     /tmp/ccnweiy3.s:136    .text.setcolor:0000000000000000 $t
     /tmp/ccnweiy3.s:143    .text.setcolor:0000000000000000 setcolor
     /tmp/ccnweiy3.s:168    .text.setcolor:000000000000000c $d
     /tmp/ccnweiy3.s:173    .text.Error_Handler:0000000000000000 $t
     /tmp/ccnweiy3.s:180    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccnweiy3.s:212    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccnweiy3.s:218    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccnweiy3.s:279    .text.MX_USART2_UART_Init:0000000000000030 $d
     /tmp/ccnweiy3.s:285    .text.MX_TIM1_Init:0000000000000000 $t
     /tmp/ccnweiy3.s:291    .text.MX_TIM1_Init:0000000000000000 MX_TIM1_Init
     /tmp/ccnweiy3.s:511    .text.MX_TIM1_Init:00000000000000d8 $d
     /tmp/ccnweiy3.s:517    .text.MX_TIM2_Init:0000000000000000 $t
     /tmp/ccnweiy3.s:523    .text.MX_TIM2_Init:0000000000000000 MX_TIM2_Init
     /tmp/ccnweiy3.s:644    .text.MX_TIM2_Init:0000000000000078 $d
     /tmp/ccnweiy3.s:649    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccnweiy3.s:656    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccnweiy3.s:803    .text.SystemClock_Config:0000000000000098 $d
     /tmp/ccnweiy3.s:808    .text.main:0000000000000000 $t
     /tmp/ccnweiy3.s:815    .text.main:0000000000000000 main
     /tmp/ccnweiy3.s:968    .text.main:00000000000000ec $d
     /tmp/ccnweiy3.s:994    .bss.huart2:0000000000000000 huart2
     /tmp/ccnweiy3.s:987    .bss.htim2:0000000000000000 htim2
     /tmp/ccnweiy3.s:980    .bss.htim1:0000000000000000 htim1
     /tmp/ccnweiy3.s:976    .bss.htim1:0000000000000000 $d
     /tmp/ccnweiy3.s:983    .bss.htim2:0000000000000000 $d
     /tmp/ccnweiy3.s:990    .bss.huart2:0000000000000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_UART_Init
memset
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_MspPostInit
HAL_PWREx_ControlVoltageScaling
HAL_PWR_EnableBkUpAccess
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_EnableMSIPLLMode
HAL_Init
HAL_TIM_PWM_Start
HAL_Delay
